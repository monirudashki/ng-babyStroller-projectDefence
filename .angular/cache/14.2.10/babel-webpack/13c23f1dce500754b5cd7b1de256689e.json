{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, isDevMode, NgModule, Optional, SkipSelf, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nconst REGISTERED_ACTION_TYPES = {};\n\nfunction resetRegisteredActionTypes() {\n  for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\n\n\nfunction createAction(type, config) {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type, (...args) => ({ ...config(...args),\n      type\n    }));\n  }\n\n  const as = config ? config._as : 'empty';\n\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({\n        type\n      }));\n\n    case 'props':\n      return defineType(type, props => ({ ...props,\n        type\n      }));\n\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nfunction props() {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/naming-convention\n  return {\n    _as: 'props',\n    _p: undefined\n  };\n}\n\nfunction union(creators) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return undefined;\n}\n\nfunction defineType(type, creator) {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false\n  });\n}\n\nconst INIT = '@ngrx/store/init';\n\nclass ActionsSubject extends BehaviorSubject {\n  constructor() {\n    super({\n      type: INIT\n    });\n  }\n\n  next(action) {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nActionsSubject.ɵfac = function ActionsSubject_Factory(t) {\n  return new (t || ActionsSubject)();\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsSubject,\n  factory: ActionsSubject.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsSubject, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\n\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\n\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\n\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\n\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\n\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\n\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\n\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\n\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\n\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\n\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\n\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\n\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\n\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\n\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\n\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\n\n\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\n\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\n\n\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\n\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\n\n\nfunction combineReducers(reducers, initialState = {}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState = {};\n\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction omit(object, keyToRemove) {\n  return Object.keys(object).filter(key => key !== keyToRemove).reduce((result, key) => Object.assign(result, {\n    [key]: object[key]\n  }), {});\n}\n\nfunction compose(...functions) {\n  return function (arg) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nfunction createReducerFactory(reducerFactory, metaReducers) {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    reducerFactory = compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return (reducers, initialState) => {\n    const reducer = reducerFactory(reducers);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nfunction createFeatureReducerFactory(metaReducers) {\n  const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0 ? compose(...metaReducers) : r => r;\n  return (reducer, initialState) => {\n    reducer = reducerFactory(reducer);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nclass ReducerObservable extends Observable {}\n\nclass ReducerManagerDispatcher extends ActionsSubject {}\n\nconst UPDATE = '@ngrx/store/update-reducers';\n\nclass ReducerManager extends BehaviorSubject {\n  constructor(dispatcher, initialState, reducers, reducerFactory) {\n    super(reducerFactory(reducers, initialState));\n    this.dispatcher = dispatcher;\n    this.initialState = initialState;\n    this.reducers = reducers;\n    this.reducerFactory = reducerFactory;\n  }\n\n  get currentReducers() {\n    return this.reducers;\n  }\n\n  addFeature(feature) {\n    this.addFeatures([feature]);\n  }\n\n  addFeatures(features) {\n    const reducers = features.reduce((reducerDict, {\n      reducers,\n      reducerFactory,\n      metaReducers,\n      initialState,\n      key\n    }) => {\n      const reducer = typeof reducers === 'function' ? createFeatureReducerFactory(metaReducers)(reducers, initialState) : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n      reducerDict[key] = reducer;\n      return reducerDict;\n    }, {});\n    this.addReducers(reducers);\n  }\n\n  removeFeature(feature) {\n    this.removeFeatures([feature]);\n  }\n\n  removeFeatures(features) {\n    this.removeReducers(features.map(p => p.key));\n  }\n\n  addReducer(key, reducer) {\n    this.addReducers({\n      [key]: reducer\n    });\n  }\n\n  addReducers(reducers) {\n    this.reducers = { ...this.reducers,\n      ...reducers\n    };\n    this.updateReducers(Object.keys(reducers));\n  }\n\n  removeReducer(featureKey) {\n    this.removeReducers([featureKey]);\n  }\n\n  removeReducers(featureKeys) {\n    featureKeys.forEach(key => {\n      this.reducers = omit(this.reducers, key)\n      /*TODO(#823)*/\n      ;\n    });\n    this.updateReducers(featureKeys);\n  }\n\n  updateReducers(featureKeys) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({\n      type: UPDATE,\n      features: featureKeys\n    });\n  }\n\n  ngOnDestroy() {\n    this.complete();\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nReducerManager.ɵfac = function ReducerManager_Factory(t) {\n  return new (t || ReducerManager)(i0.ɵɵinject(ReducerManagerDispatcher), i0.ɵɵinject(INITIAL_STATE), i0.ɵɵinject(INITIAL_REDUCERS), i0.ɵɵinject(REDUCER_FACTORY));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nReducerManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReducerManager,\n  factory: ReducerManager.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReducerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReducerManagerDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_REDUCERS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REDUCER_FACTORY]\n      }]\n    }];\n  }, null);\n})();\n\nconst REDUCER_MANAGER_PROVIDERS = [ReducerManager, {\n  provide: ReducerObservable,\n  useExisting: ReducerManager\n}, {\n  provide: ReducerManagerDispatcher,\n  useExisting: ActionsSubject\n}];\n\nclass ScannedActionsSubject extends Subject {\n  ngOnDestroy() {\n    this.complete();\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nScannedActionsSubject.ɵfac = /* @__PURE__ */function () {\n  let ɵScannedActionsSubject_BaseFactory;\n  return function ScannedActionsSubject_Factory(t) {\n    return (ɵScannedActionsSubject_BaseFactory || (ɵScannedActionsSubject_BaseFactory = i0.ɵɵgetInheritedFactory(ScannedActionsSubject)))(t || ScannedActionsSubject);\n  };\n}();\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nScannedActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScannedActionsSubject,\n  factory: ScannedActionsSubject.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScannedActionsSubject, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [ScannedActionsSubject];\n\nclass StateObservable extends Observable {}\n\nclass State extends BehaviorSubject {\n  constructor(actions$, reducer$, scannedActions, initialState) {\n    super(initialState);\n    const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n    const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n    const seed = {\n      state: initialState\n    };\n    const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n    this.stateSubscription = stateAndAction$.subscribe(({\n      state,\n      action\n    }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n\n}\n\nState.INIT = INIT;\n/** @nocollapse */\n\n/** @nocollapse */\n\nState.ɵfac = function State_Factory(t) {\n  return new (t || State)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(INITIAL_STATE));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: State,\n  factory: State.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(State, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }];\n  }, null);\n})();\n\nfunction reduceState(stateActionPair = {\n  state: undefined\n}, [action, reducer]) {\n  const {\n    state\n  } = stateActionPair;\n  return {\n    state: reducer(state, action),\n    action\n  };\n}\n\nconst STATE_PROVIDERS = [State, {\n  provide: StateObservable,\n  useExisting: State\n}];\n/* eslint-disable @typescript-eslint/naming-convention */\n\nclass Store extends Observable {\n  constructor(state$, actionsObserver, reducerManager) {\n    super();\n    this.actionsObserver = actionsObserver;\n    this.reducerManager = reducerManager;\n    this.source = state$;\n  }\n\n  select(pathOrMapFn, ...paths) {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift(operator) {\n    const store = new Store(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n    return store;\n  }\n\n  dispatch(action) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer(key, reducer) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer(key) {\n    this.reducerManager.removeReducer(key);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStore.ɵfac = function Store_Factory(t) {\n  return new (t || Store)(i0.ɵɵinject(StateObservable), i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerManager));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Store,\n  factory: Store.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Store, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StateObservable\n    }, {\n      type: ActionsSubject\n    }, {\n      type: ReducerManager\n    }];\n  }, null);\n})();\n\nconst STORE_PROVIDERS = [Store];\n\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n  return function selectOperator(source$) {\n    let mapped$;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(map(source => pathOrMapFn(source, propsOrPath)));\n    } else {\n      throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` + ` expected 'string' or 'function'`);\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n\nfunction capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.substr(1);\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\n\nfunction isUndefined(target) {\n  return target === undefined;\n}\n\nfunction isNull(target) {\n  return target === null;\n}\n\nfunction isArray(target) {\n  return Array.isArray(target);\n}\n\nfunction isString(target) {\n  return typeof target === 'string';\n}\n\nfunction isBoolean(target) {\n  return typeof target === 'boolean';\n}\n\nfunction isNumber(target) {\n  return typeof target === 'number';\n}\n\nfunction isObjectLike(target) {\n  return typeof target === 'object' && target !== null;\n}\n\nfunction isObject(target) {\n  return isObjectLike(target) && !isArray(target);\n}\n\nfunction isPlainObject(target) {\n  if (!isObject(target)) {\n    return false;\n  }\n\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nfunction isComponent(target) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n\nfunction hasOwnProperty(target, propertyName) {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\n\nfunction setNgrxMockEnvironment(value) {\n  _ngrxMockEnvironment = value;\n}\n\nfunction isNgrxMockEnvironment() {\n  return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n  return a === b;\n}\n\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction resultMemoize(projectionFn, isResultEqual) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n  let lastArguments = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n\n  let lastResult = null;\n  let overrideResult;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function setResult(result = undefined) {\n    overrideResult = {\n      result\n    };\n  }\n\n  function clearResult() {\n    overrideResult = undefined;\n  }\n  /* eslint-disable prefer-rest-params, prefer-spread */\n  // disabled because of the use of `arguments`\n\n\n  function memoized() {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    const newResult = projectionFn.apply(null, arguments);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n    return newResult;\n  }\n\n  return {\n    memoized,\n    reset,\n    setResult,\n    clearResult\n  };\n}\n\nfunction createSelector(...input) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n  if (props === undefined) {\n    const args = selectors.map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = selectors.map(fn => fn(state, props));\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const creactOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n *\n *\n */\n\n\nfunction createSelectorFactory(memoize, options = {\n  stateFn: defaultStateFn\n}) {\n  return function (...input) {\n    let args = input;\n\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(selector => selector.release && typeof selector.release === 'function');\n    const memoizedProjector = memoize(function (...selectors) {\n      return projector.apply(null, selectors);\n    });\n    const memoizedState = defaultMemoize(function (state, props) {\n      return options.stateFn.apply(null, [state, selectors, props, memoizedProjector]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult\n    });\n  };\n}\n\nfunction createFeatureSelector(featureName) {\n  return createSelector(state => {\n    const featureState = state[featureName];\n\n    if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n      console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` + 'not exist in the state, therefore createFeatureSelector ' + 'cannot access it.  Be sure it is imported in a loaded module ' + `using StoreModule.forRoot('${featureName}', ...) or ` + `StoreModule.forFeature('${featureName}', ...).  If the default ` + 'state is intended to be undefined, as is the case with router ' + 'state, this development-only warning message can be ignored.');\n    }\n\n    return featureState;\n  }, featureState => featureState);\n}\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n *\n * @param featureConfig An object that contains a feature name and a feature reducer.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, and a selector for each feature state property.\n *\n * @usageNotes\n *\n * **With Application State**\n *\n * ```ts\n * interface AppState {\n *   products: ProductsState;\n * }\n *\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * // AppState is passed as a generic argument\n * const productsFeature = createFeature<AppState>({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<AppState, ProductsState>\n *   selectProducts, // type: MemoizedSelector<AppState, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<AppState, string | null>\n * } = productsFeature;\n * ```\n *\n * **Without Application State**\n *\n * ```ts\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any, string | null>\n * } = productsFeature;\n * ```\n */\n\n\nfunction createFeature(featureConfig) {\n  const {\n    name,\n    reducer\n  } = featureConfig;\n  const featureSelector = createFeatureSelector(name);\n  const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n  return {\n    name,\n    reducer,\n    [`select${capitalize(name)}State`]: featureSelector,\n    ...nestedSelectors\n  };\n}\n\nfunction createNestedSelectors(featureSelector, reducer) {\n  const initialState = getInitialState(reducer);\n  const nestedKeys = isPlainObject(initialState) ? Object.keys(initialState) : [];\n  return nestedKeys.reduce((nestedSelectors, nestedKey) => ({ ...nestedSelectors,\n    [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, parentState => parentState?.[nestedKey])\n  }), {});\n}\n\nfunction getInitialState(reducer) {\n  return reducer(undefined, {\n    type: '@ngrx/feature/init'\n  });\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n    const nextState = reducer(state, act);\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target) {\n  Object.freeze(target);\n  const targetIsFunction = isFunction(target);\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (hasOwnProperty(target, prop) && (targetIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)) {\n      const propValue = target[prop];\n\n      if ((isObjectLike(propValue) || isFunction(propValue)) && !Object.isFrozen(propValue)) {\n        freeze(propValue);\n      }\n    }\n  });\n  return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(target, path = []) {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = target[key]; // Ignore Ivy components\n\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (isUndefined(value) || isNull(value) || isNumber(value) || isBoolean(value) || isString(value) || isArray(value)) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(unserializable, context) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n      throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n    }\n\n    return reducer(state, action);\n  };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false\n  };\n}\n\nfunction createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability\n}) {\n  return reducer => strictActionSerializability || strictStateSerializability ? serializationCheckMetaReducer(reducer, {\n    action: action => strictActionSerializability && !ignoreNgrxAction(action),\n    state: () => strictStateSerializability\n  }) : reducer;\n}\n\nfunction createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability\n}) {\n  return reducer => strictActionImmutability || strictStateImmutability ? immutabilityCheckMetaReducer(reducer, {\n    action: action => strictActionImmutability && !ignoreNgrxAction(action),\n    state: () => strictStateImmutability\n  }) : reducer;\n}\n\nfunction ignoreNgrxAction(action) {\n  return action.type.startsWith('@ngrx');\n}\n\nfunction createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone\n}) {\n  return reducer => strictActionWithinNgZone ? inNgZoneAssertMetaReducer(reducer, {\n    action: action => strictActionWithinNgZone && !ignoreNgrxAction(action)\n  }) : reducer;\n}\n\nfunction provideRuntimeChecks(runtimeChecks) {\n  return [{\n    provide: _USER_RUNTIME_CHECKS,\n    useValue: runtimeChecks\n  }, {\n    provide: USER_RUNTIME_CHECKS,\n    useFactory: _runtimeChecksFactory,\n    deps: [_USER_RUNTIME_CHECKS]\n  }, {\n    provide: ACTIVE_RUNTIME_CHECKS,\n    deps: [USER_RUNTIME_CHECKS],\n    useFactory: createActiveRuntimeChecks\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createImmutabilityCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createSerializationCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createInNgZoneCheckMetaReducer\n  }];\n}\n\nfunction checkForActionTypeUniqueness() {\n  return [{\n    provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: _actionTypeUniquenessCheck\n  }];\n}\n\nfunction _runtimeChecksFactory(runtimeChecks) {\n  return runtimeChecks;\n}\n\nfunction _actionTypeUniquenessCheck(config) {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES).filter(([, registrations]) => registrations > 1).map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(`Action types are registered more than once, ${duplicates.map(type => `\"${type}\"`).join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n  }\n}\n\nclass StoreRootModule {\n  constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) {}\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreRootModule.ɵfac = function StoreRootModule_Factory(t) {\n  return new (t || StoreRootModule)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(Store), i0.ɵɵinject(_ROOT_STORE_GUARD, 8), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreRootModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nStoreRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: Store\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_STORE_GUARD]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nclass StoreFeatureModule {\n  constructor(features, featureReducers, reducerManager, root, actionCheck) {\n    this.features = features;\n    this.featureReducers = featureReducers;\n    this.reducerManager = reducerManager;\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift(); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      const reducers = featureReducerCollection\n      /*TODO(#823)*/\n      [index];\n      return { ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState)\n      };\n    });\n    reducerManager.addFeatures(feats);\n  } // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreFeatureModule.ɵfac = function StoreFeatureModule_Factory(t) {\n  return new (t || StoreFeatureModule)(i0.ɵɵinject(_STORE_FEATURES), i0.ɵɵinject(FEATURE_REDUCERS), i0.ɵɵinject(ReducerManager), i0.ɵɵinject(StoreRootModule), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreFeatureModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFeatureModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nStoreFeatureModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_STORE_FEATURES]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_REDUCERS]\n      }]\n    }, {\n      type: ReducerManager\n    }, {\n      type: StoreRootModule\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nclass StoreModule {\n  static forRoot(reducers, config = {}) {\n    return {\n      ngModule: StoreRootModule,\n      providers: [{\n        provide: _ROOT_STORE_GUARD,\n        useFactory: _provideForRootGuard,\n        deps: [[Store, new Optional(), new SkipSelf()]]\n      }, {\n        provide: _INITIAL_STATE,\n        useValue: config.initialState\n      }, {\n        provide: INITIAL_STATE,\n        useFactory: _initialStateFactory,\n        deps: [_INITIAL_STATE]\n      }, {\n        provide: _INITIAL_REDUCERS,\n        useValue: reducers\n      }, {\n        provide: _STORE_REDUCERS,\n        useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS\n      }, {\n        provide: INITIAL_REDUCERS,\n        deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n        useFactory: _createStoreReducers\n      }, {\n        provide: USER_PROVIDED_META_REDUCERS,\n        useValue: config.metaReducers ? config.metaReducers : []\n      }, {\n        provide: _RESOLVED_META_REDUCERS,\n        deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n        useFactory: _concatMetaReducers\n      }, {\n        provide: _REDUCER_FACTORY,\n        useValue: config.reducerFactory ? config.reducerFactory : combineReducers\n      }, {\n        provide: REDUCER_FACTORY,\n        deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n        useFactory: createReducerFactory\n      }, ACTIONS_SUBJECT_PROVIDERS, REDUCER_MANAGER_PROVIDERS, SCANNED_ACTIONS_SUBJECT_PROVIDERS, STATE_PROVIDERS, STORE_PROVIDERS, provideRuntimeChecks(config.runtimeChecks), checkForActionTypeUniqueness()]\n    };\n  }\n\n  static forFeature(featureNameOrSlice, reducers, config = {}) {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [{\n        provide: _FEATURE_CONFIGS,\n        multi: true,\n        useValue: featureNameOrSlice instanceof Object ? {} : config\n      }, {\n        provide: STORE_FEATURES,\n        multi: true,\n        useValue: {\n          key: featureNameOrSlice instanceof Object ? featureNameOrSlice.name : featureNameOrSlice,\n          reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory ? config.reducerFactory : combineReducers,\n          metaReducers: !(config instanceof InjectionToken) && config.metaReducers ? config.metaReducers : [],\n          initialState: !(config instanceof InjectionToken) && config.initialState ? config.initialState : undefined\n        }\n      }, {\n        provide: _STORE_FEATURES,\n        deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n        useFactory: _createFeatureStore\n      }, {\n        provide: _FEATURE_REDUCERS,\n        multi: true,\n        useValue: featureNameOrSlice instanceof Object ? featureNameOrSlice.reducer : reducers\n      }, {\n        provide: _FEATURE_REDUCERS_TOKEN,\n        multi: true,\n        useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS\n      }, {\n        provide: FEATURE_REDUCERS,\n        multi: true,\n        deps: [Injector, _FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n        useFactory: _createFeatureReducers\n      }, checkForActionTypeUniqueness()]\n    };\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreModule.ɵfac = function StoreModule_Factory(t) {\n  return new (t || StoreModule)();\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\nfunction _createStoreReducers(injector, reducers) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nfunction _createFeatureStore(injector, configs, featureStores) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory ? conf.reducerFactory : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState\n      };\n    }\n\n    return feat;\n  });\n}\n\nfunction _createFeatureReducers(injector, reducerCollection) {\n  const reducers = reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n  return reducers;\n}\n\nfunction _initialStateFactory(initialState) {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nfunction _provideForRootGuard(store) {\n  if (store) {\n    throw new TypeError(`StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`);\n  }\n\n  return 'guarded';\n}\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\n\n\nfunction on(...args) {\n  // This could be refactored when TS releases the version with this fix:\n  // https://github.com/microsoft/TypeScript/pull/41544\n  const reducer = args.pop();\n  const types = args.map(creator => creator.type);\n  return {\n    reducer,\n    types\n  };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\n\n\nfunction createReducer(initialState, ...ons) {\n  const map = new Map();\n\n  for (const on of ons) {\n    for (const type of on.types) {\n      const existingReducer = map.get(type);\n\n      if (existingReducer) {\n        const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n\n  return function (state = initialState, action) {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, isNgrxMockEnvironment, on, props, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };","map":{"version":3,"names":["i0","Injectable","InjectionToken","Inject","isDevMode","NgModule","Optional","SkipSelf","Injector","BehaviorSubject","Observable","Subject","queueScheduler","observeOn","withLatestFrom","scan","pluck","map","distinctUntilChanged","REGISTERED_ACTION_TYPES","resetRegisteredActionTypes","key","Object","keys","createAction","type","config","defineType","args","as","_as","props","Error","_p","undefined","union","creators","creator","defineProperty","value","writable","INIT","ActionsSubject","constructor","next","action","TypeError","complete","ngOnDestroy","ɵfac","ɵprov","ACTIONS_SUBJECT_PROVIDERS","_ROOT_STORE_GUARD","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","combineReducers","reducers","initialState","reducerKeys","finalReducers","i","length","finalReducerKeys","combination","state","hasChanged","nextState","reducer","previousStateForKey","nextStateForKey","omit","object","keyToRemove","filter","reduce","result","assign","compose","functions","arg","last","rest","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","apply","createFeatureReducerFactory","r","ReducerObservable","ReducerManagerDispatcher","UPDATE","ReducerManager","dispatcher","currentReducers","addFeature","feature","addFeatures","features","reducerDict","addReducers","removeFeature","removeFeatures","removeReducers","p","addReducer","updateReducers","removeReducer","featureKey","featureKeys","forEach","decorators","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","SCANNED_ACTIONS_SUBJECT_PROVIDERS","StateObservable","State","actions$","reducer$","scannedActions","actionsOnQueue$","pipe","withLatestReducer$","seed","stateAndAction$","reduceState","stateSubscription","subscribe","unsubscribe","stateActionPair","STATE_PROVIDERS","Store","state$","actionsObserver","reducerManager","source","select","pathOrMapFn","paths","call","lift","operator","store","dispatch","error","err","STORE_PROVIDERS","propsOrPath","selectOperator","source$","mapped$","pathSlices","Boolean","capitalize","text","charAt","toUpperCase","substr","RUNTIME_CHECK_URL","isUndefined","target","isNull","isString","isBoolean","isNumber","isObjectLike","isObject","isPlainObject","targetPrototype","getPrototypeOf","prototype","isFunction","isComponent","hasOwnProperty","propertyName","_ngrxMockEnvironment","setNgrxMockEnvironment","isNgrxMockEnvironment","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","resultMemoize","projectionFn","isResultEqual","defaultMemoize","isArgumentsEqual","lastResult","overrideResult","reset","setResult","clearResult","memoized","arguments","newResult","createSelector","input","createSelectorFactory","defaultStateFn","selectors","memoizedProjector","memoize","options","stateFn","head","tail","projector","memoizedSelectors","selector","release","memoizedState","createFeatureSelector","featureName","featureState","console","warn","createFeature","featureConfig","name","featureSelector","nestedSelectors","createNestedSelectors","getInitialState","nestedKeys","nestedKey","parentState","immutabilityCheckMetaReducer","checks","act","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propValue","isFrozen","serializationCheckMetaReducer","unserializableAction","getUnserializable","throwIfUnserializable","unserializableState","path","unserializable","context","unserializablePath","join","inNgZoneAssertMetaReducer","NgZone","isInAngularZone","createActiveRuntimeChecks","runtimeChecks","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","duplicates","entries","registrations","StoreRootModule","scannedActions$","guard","actionCheck","ɵmod","ɵinj","StoreFeatureModule","featureReducers","root","feats","index","featureReducerCollection","shift","_initialStateFactory","StoreModule","forRoot","ngModule","providers","_provideForRootGuard","_createStoreReducers","_concatMetaReducers","forFeature","featureNameOrSlice","_createFeatureStore","_createFeatureReducers","injector","get","configs","featureStores","feat","conf","reducerCollection","userProvidedMetaReducers","concat","on","pop","types","createReducer","ons","Map","existingReducer","newReducer","set"],"sources":["C:/Users/user/OneDrive/Работен плот/firststeps/ng-babyStrollers-projectDefence/node_modules/@ngrx/store/fesm2020/ngrx-store.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, isDevMode, NgModule, Optional, SkipSelf, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\n\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n    for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n        delete REGISTERED_ACTION_TYPES[key];\n    }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n    REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n    if (typeof config === 'function') {\n        return defineType(type, (...args) => ({\n            ...config(...args),\n            type,\n        }));\n    }\n    const as = config ? config._as : 'empty';\n    switch (as) {\n        case 'empty':\n            return defineType(type, () => ({ type }));\n        case 'props':\n            return defineType(type, (props) => ({\n                ...props,\n                type,\n            }));\n        default:\n            throw new Error('Unexpected config.');\n    }\n}\nfunction props() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/naming-convention\n    return { _as: 'props', _p: undefined };\n}\nfunction union(creators) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return undefined;\n}\nfunction defineType(type, creator) {\n    return Object.defineProperty(creator, 'type', {\n        value: type,\n        writable: false,\n    });\n}\n\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n    constructor() {\n        super({ type: INIT });\n    }\n    next(action) {\n        if (typeof action === 'function') {\n            throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n        }\n        else if (typeof action === 'undefined') {\n            throw new TypeError(`Actions must be objects`);\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(`Actions must have a type property`);\n        }\n        super.next(action);\n    }\n    complete() {\n        /* noop */\n    }\n    ngOnDestroy() {\n        super.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ActionsSubject.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ActionsSubject.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n    const reducerKeys = Object.keys(reducers);\n    const finalReducers = {};\n    for (let i = 0; i < reducerKeys.length; i++) {\n        const key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    const finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        let hasChanged = false;\n        const nextState = {};\n        for (let i = 0; i < finalReducerKeys.length; i++) {\n            const key = finalReducerKeys[i];\n            const reducer = finalReducers[key];\n            const previousStateForKey = state[key];\n            const nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter((key) => key !== keyToRemove)\n        .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\nfunction compose(...functions) {\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        const last = functions[functions.length - 1];\n        const rest = functions.slice(0, -1);\n        return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        reducerFactory = compose.apply(null, [\n            ...metaReducers,\n            reducerFactory,\n        ]);\n    }\n    return (reducers, initialState) => {\n        const reducer = reducerFactory(reducers);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose(...metaReducers)\n        : (r) => r;\n    return (reducer, initialState) => {\n        reducer = reducerFactory(reducer);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\n\nclass ReducerObservable extends Observable {\n}\nclass ReducerManagerDispatcher extends ActionsSubject {\n}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n    constructor(dispatcher, initialState, reducers, reducerFactory) {\n        super(reducerFactory(reducers, initialState));\n        this.dispatcher = dispatcher;\n        this.initialState = initialState;\n        this.reducers = reducers;\n        this.reducerFactory = reducerFactory;\n    }\n    get currentReducers() {\n        return this.reducers;\n    }\n    addFeature(feature) {\n        this.addFeatures([feature]);\n    }\n    addFeatures(features) {\n        const reducers = features.reduce((reducerDict, { reducers, reducerFactory, metaReducers, initialState, key }) => {\n            const reducer = typeof reducers === 'function'\n                ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n                : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n            reducerDict[key] = reducer;\n            return reducerDict;\n        }, {});\n        this.addReducers(reducers);\n    }\n    removeFeature(feature) {\n        this.removeFeatures([feature]);\n    }\n    removeFeatures(features) {\n        this.removeReducers(features.map((p) => p.key));\n    }\n    addReducer(key, reducer) {\n        this.addReducers({ [key]: reducer });\n    }\n    addReducers(reducers) {\n        this.reducers = { ...this.reducers, ...reducers };\n        this.updateReducers(Object.keys(reducers));\n    }\n    removeReducer(featureKey) {\n        this.removeReducers([featureKey]);\n    }\n    removeReducers(featureKeys) {\n        featureKeys.forEach((key) => {\n            this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        });\n        this.updateReducers(featureKeys);\n    }\n    updateReducers(featureKeys) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            features: featureKeys,\n        });\n    }\n    ngOnDestroy() {\n        this.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ReducerManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager, deps: [{ token: ReducerManagerDispatcher }, { token: INITIAL_STATE }, { token: INITIAL_REDUCERS }, { token: REDUCER_FACTORY }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ReducerManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ReducerManagerDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_REDUCERS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REDUCER_FACTORY]\n                }] }]; } });\nconst REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\nclass ScannedActionsSubject extends Subject {\n    ngOnDestroy() {\n        this.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ScannedActionsSubject.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ScannedActionsSubject.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject, decorators: [{\n            type: Injectable\n        }] });\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\n\nclass StateObservable extends Observable {\n}\nclass State extends BehaviorSubject {\n    constructor(actions$, reducer$, scannedActions, initialState) {\n        super(initialState);\n        const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        const seed = { state: initialState };\n        const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n            this.next(state);\n            scannedActions.next(action);\n        });\n    }\n    ngOnDestroy() {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    }\n}\nState.INIT = INIT;\n/** @nocollapse */ /** @nocollapse */ State.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: INITIAL_STATE }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ State.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }]; } });\nfunction reduceState(stateActionPair = { state: undefined }, [action, reducer]) {\n    const { state } = stateActionPair;\n    return { state: reducer(state, action), action };\n}\nconst STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass Store extends Observable {\n    constructor(state$, actionsObserver, reducerManager) {\n        super();\n        this.actionsObserver = actionsObserver;\n        this.reducerManager = reducerManager;\n        this.source = state$;\n    }\n    select(pathOrMapFn, ...paths) {\n        return select.call(null, pathOrMapFn, ...paths)(this);\n    }\n    lift(operator) {\n        const store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    }\n    dispatch(action) {\n        this.actionsObserver.next(action);\n    }\n    next(action) {\n        this.actionsObserver.next(action);\n    }\n    error(err) {\n        this.actionsObserver.error(err);\n    }\n    complete() {\n        this.actionsObserver.complete();\n    }\n    addReducer(key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    }\n    removeReducer(key) {\n        this.reducerManager.removeReducer(key);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ Store.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store, deps: [{ token: StateObservable }, { token: ActionsSubject }, { token: ReducerManager }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ Store.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StateObservable }, { type: ActionsSubject }, { type: ReducerManager }]; } });\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n    return function selectOperator(source$) {\n        let mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n            mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map((source) => pathOrMapFn(source, propsOrPath)));\n        }\n        else {\n            throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n                ` expected 'string' or 'function'`);\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\n\nfunction capitalize(text) {\n    return (text.charAt(0).toUpperCase() + text.substr(1));\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n    return target === undefined;\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isArray(target) {\n    return Array.isArray(target);\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n    return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n    if (!isObject(target)) {\n        return false;\n    }\n    const targetPrototype = Object.getPrototypeOf(target);\n    return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isComponent(target) {\n    return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n    return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n    _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n    return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n    for (let i = 0; i < args.length; i++) {\n        if (!comparator(args[i], lastArguments[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n    return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n    let lastArguments = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n    let lastResult = null;\n    let overrideResult;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function setResult(result = undefined) {\n        overrideResult = { result };\n    }\n    function clearResult() {\n        overrideResult = undefined;\n    }\n    /* eslint-disable prefer-rest-params, prefer-spread */\n    // disabled because of the use of `arguments`\n    function memoized() {\n        if (overrideResult !== undefined) {\n            return overrideResult.result;\n        }\n        if (!lastArguments) {\n            lastResult = projectionFn.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n            return lastResult;\n        }\n        const newResult = projectionFn.apply(null, arguments);\n        lastArguments = arguments;\n        if (isResultEqual(lastResult, newResult)) {\n            return lastResult;\n        }\n        lastResult = newResult;\n        return newResult;\n    }\n    return { memoized, reset, setResult, clearResult };\n}\nfunction createSelector(...input) {\n    return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n    if (props === undefined) {\n        const args = selectors.map((fn) => fn(state));\n        return memoizedProjector.memoized.apply(null, args);\n    }\n    const args = selectors.map((fn) => fn(state, props));\n    return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const creactOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n *\n *\n */\nfunction createSelectorFactory(memoize, options = {\n    stateFn: defaultStateFn,\n}) {\n    return function (...input) {\n        let args = input;\n        if (Array.isArray(args[0])) {\n            const [head, ...tail] = args;\n            args = [...head, ...tail];\n        }\n        const selectors = args.slice(0, args.length - 1);\n        const projector = args[args.length - 1];\n        const memoizedSelectors = selectors.filter((selector) => selector.release && typeof selector.release === 'function');\n        const memoizedProjector = memoize(function (...selectors) {\n            return projector.apply(null, selectors);\n        });\n        const memoizedState = defaultMemoize(function (state, props) {\n            return options.stateFn.apply(null, [\n                state,\n                selectors,\n                props,\n                memoizedProjector,\n            ]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach((selector) => selector.release());\n        }\n        return Object.assign(memoizedState.memoized, {\n            release,\n            projector: memoizedProjector.memoized,\n            setResult: memoizedState.setResult,\n            clearResult: memoizedState.clearResult,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector((state) => {\n        const featureState = state[featureName];\n        if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n            console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` +\n                'not exist in the state, therefore createFeatureSelector ' +\n                'cannot access it.  Be sure it is imported in a loaded module ' +\n                `using StoreModule.forRoot('${featureName}', ...) or ` +\n                `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n                'state is intended to be undefined, as is the case with router ' +\n                'state, this development-only warning message can be ignored.');\n        }\n        return featureState;\n    }, (featureState) => featureState);\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n *\n * @param featureConfig An object that contains a feature name and a feature reducer.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, and a selector for each feature state property.\n *\n * @usageNotes\n *\n * **With Application State**\n *\n * ```ts\n * interface AppState {\n *   products: ProductsState;\n * }\n *\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * // AppState is passed as a generic argument\n * const productsFeature = createFeature<AppState>({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<AppState, ProductsState>\n *   selectProducts, // type: MemoizedSelector<AppState, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<AppState, string | null>\n * } = productsFeature;\n * ```\n *\n * **Without Application State**\n *\n * ```ts\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any, string | null>\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n    const { name, reducer } = featureConfig;\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n    return {\n        name,\n        reducer,\n        [`select${capitalize(name)}State`]: featureSelector,\n        ...nestedSelectors,\n    };\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n    const initialState = getInitialState(reducer);\n    const nestedKeys = (isPlainObject(initialState)\n        ? Object.keys(initialState)\n        : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n        ...nestedSelectors,\n        [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState?.[nestedKey]),\n    }), {});\n}\nfunction getInitialState(reducer) {\n    return reducer(undefined, { type: '@ngrx/feature/init' });\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        const act = checks.action(action) ? freeze(action) : action;\n        const nextState = reducer(state, act);\n        return checks.state() ? freeze(nextState) : nextState;\n    };\n}\nfunction freeze(target) {\n    Object.freeze(target);\n    const targetIsFunction = isFunction(target);\n    Object.getOwnPropertyNames(target).forEach((prop) => {\n        // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n        if (prop.startsWith('ɵ')) {\n            return;\n        }\n        if (hasOwnProperty(target, prop) &&\n            (targetIsFunction\n                ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n                : true)) {\n            const propValue = target[prop];\n            if ((isObjectLike(propValue) || isFunction(propValue)) &&\n                !Object.isFrozen(propValue)) {\n                freeze(propValue);\n            }\n        }\n    });\n    return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action)) {\n            const unserializableAction = getUnserializable(action);\n            throwIfUnserializable(unserializableAction, 'action');\n        }\n        const nextState = reducer(state, action);\n        if (checks.state()) {\n            const unserializableState = getUnserializable(nextState);\n            throwIfUnserializable(unserializableState, 'state');\n        }\n        return nextState;\n    };\n}\nfunction getUnserializable(target, path = []) {\n    // Guard against undefined and null, e.g. a reducer that returns undefined\n    if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n        return {\n            path: ['root'],\n            value: target,\n        };\n    }\n    const keys = Object.keys(target);\n    return keys.reduce((result, key) => {\n        if (result) {\n            return result;\n        }\n        const value = target[key];\n        // Ignore Ivy components\n        if (isComponent(value)) {\n            return result;\n        }\n        if (isUndefined(value) ||\n            isNull(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isString(value) ||\n            isArray(value)) {\n            return false;\n        }\n        if (isPlainObject(value)) {\n            return getUnserializable(value, [...path, key]);\n        }\n        return {\n            path: [...path, key],\n            value,\n        };\n    }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n    if (unserializable === false) {\n        return;\n    }\n    const unserializablePath = unserializable.path.join('.');\n    const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n    error.value = unserializable.value;\n    error.unserializablePath = unserializablePath;\n    throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n            throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n        }\n        return reducer(state, action);\n    };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n    if (isDevMode()) {\n        return {\n            strictStateSerializability: false,\n            strictActionSerializability: false,\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n            strictActionWithinNgZone: false,\n            strictActionTypeUniqueness: false,\n            ...runtimeChecks,\n        };\n    }\n    return {\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictActionWithinNgZone: false,\n        strictActionTypeUniqueness: false,\n    };\n}\nfunction createSerializationCheckMetaReducer({ strictActionSerializability, strictStateSerializability, }) {\n    return (reducer) => strictActionSerializability || strictStateSerializability\n        ? serializationCheckMetaReducer(reducer, {\n            action: (action) => strictActionSerializability && !ignoreNgrxAction(action),\n            state: () => strictStateSerializability,\n        })\n        : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({ strictActionImmutability, strictStateImmutability, }) {\n    return (reducer) => strictActionImmutability || strictStateImmutability\n        ? immutabilityCheckMetaReducer(reducer, {\n            action: (action) => strictActionImmutability && !ignoreNgrxAction(action),\n            state: () => strictStateImmutability,\n        })\n        : reducer;\n}\nfunction ignoreNgrxAction(action) {\n    return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({ strictActionWithinNgZone, }) {\n    return (reducer) => strictActionWithinNgZone\n        ? inNgZoneAssertMetaReducer(reducer, {\n            action: (action) => strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n        : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n    return [\n        {\n            provide: _USER_RUNTIME_CHECKS,\n            useValue: runtimeChecks,\n        },\n        {\n            provide: USER_RUNTIME_CHECKS,\n            useFactory: _runtimeChecksFactory,\n            deps: [_USER_RUNTIME_CHECKS],\n        },\n        {\n            provide: ACTIVE_RUNTIME_CHECKS,\n            deps: [USER_RUNTIME_CHECKS],\n            useFactory: createActiveRuntimeChecks,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createImmutabilityCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createSerializationCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createInNgZoneCheckMetaReducer,\n        },\n    ];\n}\nfunction checkForActionTypeUniqueness() {\n    return [\n        {\n            provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: _actionTypeUniquenessCheck,\n        },\n    ];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n    return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n    if (!config.strictActionTypeUniqueness) {\n        return;\n    }\n    const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n        .filter(([, registrations]) => registrations > 1)\n        .map(([type]) => type);\n    if (duplicates.length) {\n        throw new Error(`Action types are registered more than once, ${duplicates\n            .map((type) => `\"${type}\"`)\n            .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n    }\n}\n\nclass StoreRootModule {\n    constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) { }\n}\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: Store }, { token: _ROOT_STORE_GUARD, optional: true }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule });\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: Store }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_STORE_GUARD]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreFeatureModule {\n    constructor(features, featureReducers, reducerManager, root, actionCheck) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        const feats = features.map((feature, index) => {\n            const featureReducerCollection = featureReducers.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const reducers = featureReducerCollection /*TODO(#823)*/[index];\n            return {\n                ...feature,\n                reducers,\n                initialState: _initialStateFactory(feature.initialState),\n            };\n        });\n        reducerManager.addFeatures(feats);\n    }\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnDestroy() {\n        this.reducerManager.removeFeatures(this.features);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule, deps: [{ token: _STORE_FEATURES }, { token: FEATURE_REDUCERS }, { token: ReducerManager }, { token: StoreRootModule }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule });\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_STORE_FEATURES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FEATURE_REDUCERS]\n                }] }, { type: ReducerManager }, { type: StoreRootModule }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreModule {\n    static forRoot(reducers, config = {}) {\n        return {\n            ngModule: StoreRootModule,\n            providers: [\n                {\n                    provide: _ROOT_STORE_GUARD,\n                    useFactory: _provideForRootGuard,\n                    deps: [[Store, new Optional(), new SkipSelf()]],\n                },\n                { provide: _INITIAL_STATE, useValue: config.initialState },\n                {\n                    provide: INITIAL_STATE,\n                    useFactory: _initialStateFactory,\n                    deps: [_INITIAL_STATE],\n                },\n                { provide: _INITIAL_REDUCERS, useValue: reducers },\n                {\n                    provide: _STORE_REDUCERS,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n                },\n                {\n                    provide: INITIAL_REDUCERS,\n                    deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n                    useFactory: _createStoreReducers,\n                },\n                {\n                    provide: USER_PROVIDED_META_REDUCERS,\n                    useValue: config.metaReducers ? config.metaReducers : [],\n                },\n                {\n                    provide: _RESOLVED_META_REDUCERS,\n                    deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n                    useFactory: _concatMetaReducers,\n                },\n                {\n                    provide: _REDUCER_FACTORY,\n                    useValue: config.reducerFactory\n                        ? config.reducerFactory\n                        : combineReducers,\n                },\n                {\n                    provide: REDUCER_FACTORY,\n                    deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n                    useFactory: createReducerFactory,\n                },\n                ACTIONS_SUBJECT_PROVIDERS,\n                REDUCER_MANAGER_PROVIDERS,\n                SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n                STATE_PROVIDERS,\n                STORE_PROVIDERS,\n                provideRuntimeChecks(config.runtimeChecks),\n                checkForActionTypeUniqueness(),\n            ],\n        };\n    }\n    static forFeature(featureNameOrSlice, reducers, config = {}) {\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [\n                {\n                    provide: _FEATURE_CONFIGS,\n                    multi: true,\n                    useValue: featureNameOrSlice instanceof Object ? {} : config,\n                },\n                {\n                    provide: STORE_FEATURES,\n                    multi: true,\n                    useValue: {\n                        key: featureNameOrSlice instanceof Object\n                            ? featureNameOrSlice.name\n                            : featureNameOrSlice,\n                        reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory\n                            ? config.reducerFactory\n                            : combineReducers,\n                        metaReducers: !(config instanceof InjectionToken) && config.metaReducers\n                            ? config.metaReducers\n                            : [],\n                        initialState: !(config instanceof InjectionToken) && config.initialState\n                            ? config.initialState\n                            : undefined,\n                    },\n                },\n                {\n                    provide: _STORE_FEATURES,\n                    deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n                    useFactory: _createFeatureStore,\n                },\n                {\n                    provide: _FEATURE_REDUCERS,\n                    multi: true,\n                    useValue: featureNameOrSlice instanceof Object\n                        ? featureNameOrSlice.reducer\n                        : reducers,\n                },\n                {\n                    provide: _FEATURE_REDUCERS_TOKEN,\n                    multi: true,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n                },\n                {\n                    provide: FEATURE_REDUCERS,\n                    multi: true,\n                    deps: [\n                        Injector,\n                        _FEATURE_REDUCERS,\n                        [new Inject(_FEATURE_REDUCERS_TOKEN)],\n                    ],\n                    useFactory: _createFeatureReducers,\n                },\n                checkForActionTypeUniqueness(),\n            ],\n        };\n    }\n}\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule });\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\nfunction _createStoreReducers(injector, reducers) {\n    return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\nfunction _createFeatureStore(injector, configs, featureStores) {\n    return featureStores.map((feat, index) => {\n        if (configs[index] instanceof InjectionToken) {\n            const conf = injector.get(configs[index]);\n            return {\n                key: feat.key,\n                reducerFactory: conf.reducerFactory\n                    ? conf.reducerFactory\n                    : combineReducers,\n                metaReducers: conf.metaReducers ? conf.metaReducers : [],\n                initialState: conf.initialState,\n            };\n        }\n        return feat;\n    });\n}\nfunction _createFeatureReducers(injector, reducerCollection) {\n    const reducers = reducerCollection.map((reducer) => {\n        return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n    });\n    return reducers;\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n    return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard(store) {\n    if (store) {\n        throw new TypeError(`StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n    // This could be refactored when TS releases the version with this fix:\n    // https://github.com/microsoft/TypeScript/pull/41544\n    const reducer = args.pop();\n    const types = args.map((creator) => creator.type);\n    return { reducer, types };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n    const map = new Map();\n    for (const on of ons) {\n        for (const type of on.types) {\n            const existingReducer = map.get(type);\n            if (existingReducer) {\n                const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n                map.set(type, newReducer);\n            }\n            else {\n                map.set(type, on.reducer);\n            }\n        }\n    }\n    return function (state = initialState, action) {\n        const reducer = map.get(action.type);\n        return reducer ? reducer(state, action) : state;\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, isNgrxMockEnvironment, on, props, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}